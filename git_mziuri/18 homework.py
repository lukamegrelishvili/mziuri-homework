import tkinter as tk
from tkinter import ttk, messagebox
import random
import string
from datetime import datetime

# === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è ===
def generate_password():
    length = length_var.get()

    charset = ''
    if use_letters.get():
        charset += string.ascii_letters
    if use_digits.get():
        charset += string.digits
    if use_symbols.get():
        charset += string.punctuation

    if not charset:
        result_label.config(text="–í—ã–±–µ—Ä–∏ —Ö–æ—Ç—è –±—ã 1 —Ç–∏–ø!")
        return

    password = ''.join(random.choice(charset) for _ in range(length))
    result_label.config(text=password)

    # –ê–Ω–∏–º–∞—Ü–∏—è
    result_label.config(fg="#ff9800")
    result_label.after(150, lambda: result_label.config(fg="#4caf50"))

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª ===
def save_password():
    password = result_label.cget("text")
    if not password or "–í—ã–±–µ—Ä–∏" in password:
        messagebox.showinfo("–£–ø—Å", "–°–Ω–∞—á–∞–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø–∞—Ä–æ–ª—å")
        return

    with open("saved_passwords.txt", "a", encoding="utf-8") as file:
        file.write(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] {password}\n")
    messagebox.showinfo("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", "–ü–∞—Ä–æ–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ñ–∞–π–ª!")

# === –û–∫–Ω–æ ===
root = tk.Tk()
root.title("üîê –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π")
root.geometry("450x450")
root.configure(bg="#1e1e2f")
root.resizable(False, False)

# === –°—Ç–∏–ª–∏ ===
style = ttk.Style()
style.theme_use("default")
style.configure("TButton",
                font=("Segoe UI", 11),
                padding=10,
                background="#4caf50",
                foreground="white")
style.map("TButton",
          background=[("active", "#45a049")])

# === –ó–∞–≥–æ–ª–æ–≤–æ–∫ ===
tk.Label(root, text="üîë –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π", font=("Segoe UI", 16, "bold"),
         bg="#1e1e2f", fg="white").pack(pady=20)

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–æ–ª—è ===
settings_frame = tk.Frame(root, bg="#1e1e2f")
settings_frame.pack(pady=10)

# –ü–æ–ª–∑—É–Ω–æ–∫ –¥–ª–∏–Ω—ã
tk.Label(settings_frame, text="–î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è:", bg="#1e1e2f", fg="white", font=("Segoe UI", 10)).grid(row=0, column=0, padx=5, sticky="w")
length_var = tk.IntVar(value=12)
length_slider = ttk.Scale(settings_frame, from_=4, to=32, variable=length_var, orient="horizontal", length=200)
length_slider.grid(row=0, column=1, padx=10)

# –ß–µ–∫–±–æ–∫—Å—ã
use_letters = tk.BooleanVar(value=True)
use_digits = tk.BooleanVar(value=True)
use_symbols = tk.BooleanVar(value=True)

tk.Checkbutton(settings_frame, text="–ë—É–∫–≤—ã", variable=use_letters, bg="#1e1e2f", fg="white", selectcolor="#1e1e2f", font=("Segoe UI", 10)).grid(row=1, column=0, sticky="w")
tk.Checkbutton(settings_frame, text="–¶–∏—Ñ—Ä—ã", variable=use_digits, bg="#1e1e2f", fg="white", selectcolor="#1e1e2f", font=("Segoe UI", 10)).grid(row=1, column=1, sticky="w")
tk.Checkbutton(settings_frame, text="–°–∏–º–≤–æ–ª—ã", variable=use_symbols, bg="#1e1e2f", fg="white", selectcolor="#1e1e2f", font=("Segoe UI", 10)).grid(row=1, column=2, sticky="w")

# === –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ===
ttk.Button(root, text="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å", command=generate_password).pack(pady=15)

# === –†–µ–∑—É–ª—å—Ç–∞—Ç ===
result_label = tk.Label(root, text="", font=("Courier New", 14, "bold"), fg="#4caf50", bg="#1e1e2f")
result_label.pack(pady=10)

# === –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ===
ttk.Button(root, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å", command=save_password).pack(pady=10)

# === –ü–æ–¥–ø–∏—Å—å ===
tk.Label(root, text="–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –Ω–∞ Python", font=("Segoe UI", 9), bg="#1e1e2f", fg="#aaaaaa").pack(side="bottom", pady=10)

# === –ó–∞–ø—É—Å–∫ ===
root.mainloop()
